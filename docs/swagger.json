{
    "swagger": "2.0",
    "info": {
        "description": "This is API for Text en/decryption requests",
        "title": "DevIntApp",
        "contact": {},
        "version": "1.1"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/api/login_user": {
            "post": {
                "description": "Authenticates a user and returns a JWT token.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Login a user",
                "parameters": [
                    {
                        "description": "User login data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.LoginUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User logged in successfully",
                        "schema": {
                            "$ref": "#/definitions/schemas.ResponseMessage"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/schemas.ResponseMessage"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/schemas.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/api/logout": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Log out the user by blacklisting the token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Logout",
                "responses": {
                    "200": {
                        "description": "User logged out successfully",
                        "schema": {
                            "$ref": "#/definitions/schemas.ResponseMessage"
                        }
                    },
                    "401": {
                        "description": "Missing token",
                        "schema": {
                            "$ref": "#/definitions/schemas.ResponseMessage"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/schemas.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/api/order": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Получить все заявки на шифрование с возможностью фильтрации по статусу и датам",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "orders"
                ],
                "summary": "Получить все заявки на шифрование с параметрами",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Статус заявки",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Наличие статуса",
                        "name": "is_status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.GetAllOrdersWithParamsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/schemas.ResponseMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/schemas.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/api/order_text/{Id}": {
            "delete": {
                "description": "Удалить текст из запроса на шифрование по ID запроса и TextId",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "text_and_order"
                ],
                "summary": "Удалить текст из запроса на шифрование",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID запроса на шифрование",
                        "name": "Id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Id текста",
                        "name": "TextId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Text was deleted from order",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/schemas.ResponseMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/schemas.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/api/register_user": {
            "post": {
                "description": "Registers a new user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Register a new user",
                "parameters": [
                    {
                        "description": "User registration data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.RegisterUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User registered successfully",
                        "schema": {
                            "$ref": "#/definitions/schemas.ResponseMessage"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/schemas.ResponseMessage"
                        }
                    },
                    "409": {
                        "description": "User with this login already exists",
                        "schema": {
                            "$ref": "#/definitions/schemas.ResponseMessage"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/schemas.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/api/text/pic/{Id}": {
            "post": {
                "description": "Change text`s picture using it's ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "texts"
                ],
                "summary": "Change picture By ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Text Id",
                        "name": "Id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "File",
                        "name": "img",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Picture was changed sucessfully",
                        "schema": {
                            "$ref": "#/definitions/schemas.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/api/text_to_order/{Id}": {
            "post": {
                "description": "This endpoint allows you to add a text to a order by it's ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "texts"
                ],
                "summary": "Add text to order",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Text Id",
                        "name": "Id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Text added successfully",
                        "schema": {
                            "$ref": "#/definitions/schemas.AddTextToOrderResponce"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/schemas.ResponseMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/schemas.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/api/texts": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns a list of all texts.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "texts"
                ],
                "summary": "Get all texts",
                "responses": {
                    "200": {
                        "description": "List of texts retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/schemas.GetAllTextsResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/schemas.ResponseMessage"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/schemas.ResponseMessage"
                        }
                    }
                }
            },
            "post": {
                "description": "Create text with properties",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "texts"
                ],
                "summary": "Create text",
                "parameters": [
                    {
                        "description": "Text data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.CreateTextRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/schemas.CreateTextResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/schemas.ResponseMessage"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/schemas.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/api/texts/{Id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get info about text using its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "texts"
                ],
                "summary": "Get text by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Text Id",
                        "name": "Id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.GetTextResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/schemas.ResponseMessage"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/schemas.ResponseMessage"
                        }
                    }
                }
            },
            "put": {
                "description": "Update text using it's ID with parametres",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "texts"
                ],
                "summary": "Update text by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Text Id",
                        "name": "Id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update text data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.UpdateTextRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.DeleteTextResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/schemas.ResponseMessage"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/schemas.ResponseMessage"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete text using it's ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "texts"
                ],
                "summary": "Delete text by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Text Id",
                        "name": "Id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.DeleteTextResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/schemas.ResponseMessage"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/schemas.ResponseMessage"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "ds.EncOrDecOrder": {
            "type": "object",
            "properties": {
                "creator": {
                    "$ref": "#/definitions/ds.Users"
                },
                "creator_id": {
                    "type": "integer"
                },
                "date_create": {
                    "type": "string"
                },
                "date_finish": {
                    "type": "string"
                },
                "date_update": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "moderator": {
                    "$ref": "#/definitions/ds.Users"
                },
                "moderator_id": {
                    "type": "integer"
                },
                "priority": {
                    "type": "integer"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "ds.TextToEncOrDec": {
            "type": "object",
            "properties": {
                "byte_len": {
                    "type": "integer"
                },
                "enc": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "img": {
                    "type": "string"
                },
                "status": {
                    "type": "boolean"
                },
                "text": {
                    "type": "string"
                }
            }
        },
        "ds.Users": {
            "type": "object",
            "properties": {
                "fio": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_moderator": {
                    "type": "boolean"
                },
                "login": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "schemas.AddTextToOrderResponce": {
            "type": "object",
            "properties": {
                "messageResponse": {
                    "type": "string"
                },
                "orderId": {
                    "type": "integer"
                },
                "textId": {
                    "type": "integer"
                }
            }
        },
        "schemas.CreateTextRequest": {
            "type": "object",
            "properties": {
                "text": {
                    "$ref": "#/definitions/ds.TextToEncOrDec"
                }
            }
        },
        "schemas.CreateTextResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "messageResponse": {
                    "type": "string"
                }
            }
        },
        "schemas.DeleteTextResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "messageResponse": {
                    "type": "string"
                }
            }
        },
        "schemas.GetAllOrdersWithParamsResponse": {
            "type": "object",
            "properties": {
                "orders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ds.EncOrDecOrder"
                    }
                }
            }
        },
        "schemas.GetAllTextsResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "text_req_ID": {
                    "type": "integer"
                },
                "texts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ds.TextToEncOrDec"
                    }
                }
            }
        },
        "schemas.GetTextResponse": {
            "type": "object",
            "properties": {
                "text": {
                    "$ref": "#/definitions/ds.TextToEncOrDec"
                }
            }
        },
        "schemas.LoginUserRequest": {
            "type": "object",
            "properties": {
                "login": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "schemas.RegisterUserRequest": {
            "type": "object",
            "properties": {
                "login": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "schemas.ResponseMessage": {
            "type": "object"
        },
        "schemas.UpdateTextRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "text": {
                    "$ref": "#/definitions/ds.TextToEncOrDec"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}